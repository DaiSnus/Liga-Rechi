// <auto-generated />
using System;
using Liga_Rechi.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Liga_Rechi.Migrations
{
    [DbContext(typeof(LigaAppDbContext))]
    [Migration("20250420094722_Recycling")]
    partial class Recycling
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.CommunityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TutorId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("Communities");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.CommunityFileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommunityId")
                        .HasColumnType("integer");

                    b.Property<int?>("FileId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CommunityId");

                    b.HasIndex("FileId");

                    b.ToTable("CommunityFiles");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.CommunityTeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommunityId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CommunityId");

                    b.HasIndex("UserId");

                    b.ToTable("CommunityTeams");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CommunityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("PumpingSkillId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CommunityId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("PumpingSkillId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventParticipantEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("EventsParticipants");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventTeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("EventTeams");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventTrainerSkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillId")
                        .HasColumnType("integer");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("SkillId");

                    b.HasIndex("TrainerId");

                    b.ToTable("EventTrainerSkills");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectFileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FileId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectFiles");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectRewardTemplateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("RewardTemplateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RewardTemplateId");

                    b.ToTable("ProjectRewardTemplates");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectTeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectTeams");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.RewardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RewardTemplateId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RewardTemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.RewardSkillExperienceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<int?>("RewardId")
                        .HasColumnType("integer");

                    b.Property<int?>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RewardId");

                    b.HasIndex("SkillId");

                    b.ToTable("RewardSkillExperiences");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.RewardTemplateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RewardTemplates");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.SkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.TrainerVisitsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventParticipantId")
                        .HasColumnType("integer");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EventParticipantId");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerVisits");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.UserFileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FileId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFiles");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.UserSkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("SkillId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalExpirience")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.CommunityEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "Tutor")
                        .WithMany("CuratedCommunities")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.CommunityFileEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.CommunityEntity", "Community")
                        .WithMany("Files")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.FileEntity", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Community");

                    b.Navigation("File");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.CommunityTeamEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.CommunityEntity", "Community")
                        .WithMany("Team")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "User")
                        .WithMany("CommunityTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Community");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.CommunityEntity", "Community")
                        .WithMany("Events")
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.ProjectEntity", "Project")
                        .WithMany("Events")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.SkillEntity", "PumpingSkill")
                        .WithMany()
                        .HasForeignKey("PumpingSkillId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Community");

                    b.Navigation("Project");

                    b.Navigation("PumpingSkill");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventParticipantEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.EventEntity", "Event")
                        .WithMany("Participants")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "User")
                        .WithMany("ParticipationProjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventTeamEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.EventEntity", "Event")
                        .WithMany("Managers")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "User")
                        .WithMany("EventTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventTrainerSkillEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.EventEntity", "Event")
                        .WithMany("TrainerSkills")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.SkillEntity", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Event");

                    b.Navigation("Skill");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "Leader")
                        .WithMany("ManagedProjects")
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectFileEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.FileEntity", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.ProjectEntity", "Project")
                        .WithMany("Files")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("File");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectRewardTemplateEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.ProjectEntity", "Project")
                        .WithMany("ProjectRewardTemplates")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.RewardTemplateEntity", "RewardTemplate")
                        .WithMany("ProjectRewardTemplates")
                        .HasForeignKey("RewardTemplateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Project");

                    b.Navigation("RewardTemplate");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectTeamEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.ProjectEntity", "Project")
                        .WithMany("Team")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "User")
                        .WithMany("ProjectTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.RewardEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.RewardTemplateEntity", "RewardTemplate")
                        .WithMany("Rewards")
                        .HasForeignKey("RewardTemplateId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "User")
                        .WithMany("Awards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("RewardTemplate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.RewardSkillExperienceEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.RewardEntity", "Reward")
                        .WithMany("RewardSkillExperience")
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.SkillEntity", "Skill")
                        .WithMany("RewardSkillExperiences")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Reward");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.TrainerVisitsEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.EventParticipantEntity", "EventParticipant")
                        .WithMany("TrainerVisits")
                        .HasForeignKey("EventParticipantId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("EventParticipant");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.UserFileEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.FileEntity", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "User")
                        .WithMany("Files")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("File");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.UserSkillEntity", b =>
                {
                    b.HasOne("Liga_Rechi.DataLayer.Entities.SkillEntity", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Liga_Rechi.DataLayer.Entities.UserEntity", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.CommunityEntity", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Files");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventEntity", b =>
                {
                    b.Navigation("Managers");

                    b.Navigation("Participants");

                    b.Navigation("TrainerSkills");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.EventParticipantEntity", b =>
                {
                    b.Navigation("TrainerVisits");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.ProjectEntity", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Files");

                    b.Navigation("ProjectRewardTemplates");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.RewardEntity", b =>
                {
                    b.Navigation("RewardSkillExperience");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.RewardTemplateEntity", b =>
                {
                    b.Navigation("ProjectRewardTemplates");

                    b.Navigation("Rewards");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.SkillEntity", b =>
                {
                    b.Navigation("RewardSkillExperiences");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("Liga_Rechi.DataLayer.Entities.UserEntity", b =>
                {
                    b.Navigation("Awards");

                    b.Navigation("CommunityTeams");

                    b.Navigation("CuratedCommunities");

                    b.Navigation("EventTeams");

                    b.Navigation("Files");

                    b.Navigation("ManagedProjects");

                    b.Navigation("ParticipationProjects");

                    b.Navigation("ProjectTeams");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
