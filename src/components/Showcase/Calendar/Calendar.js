import react, { useState } from "react"
import "./Calendar.css"

const Calendar = () => {
  const [showAllEvents, setShowAllEvents] = useState(false)
  const [selectedEvent, setSelectedEvent] = useState(null)

  const events = [
    {
      id: 1,
      type: "project",
      projectName: "–ü–æ—ç—Ç–∏—á–µ—Å–∫–∏–π —á–µ–º–ø–∏–æ–Ω–∞—Ç",
      projectLogo: "",
      eventName: "–§–∏–Ω–∞–ª —Å–µ–∑–æ–Ω–∞",
      date: "2025-05-15",
      time: "18:00",
      isFree: true,
      description: "–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—ç—Ç–æ–≤ —Å–µ–∑–æ–Ω–∞ 2025. –õ—É—á—à–∏–µ –∏–∑ –ª—É—á—à–∏—Ö —Å—Ä–∞–∑—è—Ç—Å—è –∑–∞ –∑–≤–∞–Ω–∏–µ —á–µ–º–ø–∏–æ–Ω–∞.",
      detailedDescription:
        "–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –ø–æ—ç—Ç–æ–≤ —Å–µ–∑–æ–Ω–∞ 2025. –õ—É—á—à–∏–µ –∏–∑ –ª—É—á—à–∏—Ö —Å—Ä–∞–∑—è—Ç—Å—è –∑–∞ –∑–≤–∞–Ω–∏–µ —á–µ–º–ø–∏–æ–Ω–∞. –£—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è –≤ —Ç—Ä–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö: –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–æ—ç–∑–∏—è, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ—ç–∑–∏—è –∏ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è.",
      organizers: [
        { id: 1, name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞", avatar: "" },
        { id: 2, name: "–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤", avatar: "" }
      ],
      trainers: [{ id: 3, name: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞", avatar: "" }],
      registeredCount: 45,
      websiteUrl: "https://poetry-championship.com/final-2025"
    },
    {
      id: 2,
      type: "community",
      communityName: "–ö–ª—É–± –æ—Ä–∞—Ç–æ—Ä–æ–≤",
      communityLogo: "",
      eventName: "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏",
      date: "2025-05-25",
      time: "19:00",
      price: 1500,
      description: "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞–≤—ã–∫–æ–≤ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –≤ –ø—É–±–ª–∏—á–Ω—ã—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö.",
      detailedDescription:
        "–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞–≤—ã–∫–æ–≤ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –≤ –ø—É–±–ª–∏—á–Ω—ã—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö. –£—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–∞—É—á–∞—Ç—Å—è –±—ã—Å—Ç—Ä–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏.",
      organizers: [{ id: 7, name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞", avatar: "" }],
      trainers: [],
      registeredCount: 18,
      websiteUrl: "https://speakers-club.com/improvisation-workshop",
      communityDescription:
        "–ö–ª—É–± –æ—Ä–∞—Ç–æ—Ä–æ–≤ - —ç—Ç–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ª—é–¥–µ–π, —Å—Ç—Ä–µ–º—è—â–∏—Ö—Å—è —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –ø—É–±–ª–∏—á–Ω—ã—Ö –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π. –ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏, –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è.",
      posterUrl: ""
    }
  ]

  const today = new Date()
  today.setHours(0, 0, 0, 0)

  const upcomingEvents = events.filter((event) => {
    const eventDate = new Date(event.date)
    return eventDate >= today
  })

  const sortedEvents = [...upcomingEvents].sort((a, b) => {
    return new Date(a.date) - new Date(b.date)
  })

  const displayedEvents = showAllEvents ? sortedEvents : sortedEvents.slice(0, 7)

  const formatDate = (dateString) => {
    const options = { day: "numeric", month: "long", year: "numeric" }
    return new Date(dateString).toLocaleDateString("ru-RU", options)
  }

  const handleEventClick = (event) => {
    setSelectedEvent(event)
  }

  const handleRegister = (eventId) => {
    alert(`–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ID: ${eventId}`)
    setSelectedEvent(null)
  }

  return (
    <section className="calendar-section">
      <div className="container">
        <h2 className="section-title">–ö–∞–ª–µ–Ω–¥–∞—Ä—å</h2>
        <p className="section-subtitle">
          
        </p>

        <div className="events-list">
          {displayedEvents.map((event) => (
            <div
              key={event.id}
              className={`event-card ${event.type === "project" ? "project-event" : "community-event"}`}
            >
              <div className="event-header">
                <div
                  className="event-logo"
                >
                  <img
                    src={event.type === "project" ? event.projectLogo : event.communityLogo}
                  />
                </div>

                <div className="event-date">
                  <div className="date">{formatDate(event.date)}</div>
                  <div className="time">{event.time}</div>
                </div>
              </div>

              <div className="event-content">
                <h3 className="event-title" onClick={() => handleEventClick(event)}>
                  {event.type === "project" ? `${event.projectName}: ${event.eventName}` : event.eventName}
                </h3>

                <p className="event-description">{event.description}</p>

                <div className="event-footer">
                  {event.type === "project" ? (
                    <div className="event-price free">–ë–ï–°–ü–õ–ê–¢–ù–û</div>
                  ) : (
                    <div className="event-price">
                      {event.price === "free-to-pay" ? "Free-to-pay" : `${event.price} ‚ÇΩ`}
                    </div>
                  )}

                  <div className="event-actions">
                    <button className="event-action details" onClick={() => handleEventClick(event)}>
                      –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                    <button className="event-action register" onClick={() => handleRegister(event.id)}>
                      –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
                    </button>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {sortedEvents.length > 7 && !showAllEvents && (
          <div className="show-all-container">
            <button className="show-all-button" onClick={() => setShowAllEvents(true)}>
              –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Å—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å!
            </button>
          </div>
        )}
      </div>

      {selectedEvent && (
        <div className="modal-overlay" onClick={() => setSelectedEvent(null)}>
          <div className="event-modal" onClick={(e) => e.stopPropagation()}>
            <button className="close-modal" onClick={() => setSelectedEvent(null)}>
              &times;
            </button>

            <h2 className="modal-title">
              {selectedEvent.type === "project"
                ? `${selectedEvent.projectName}: ${selectedEvent.eventName}`
                : selectedEvent.eventName}
            </h2>

            <div className="modal-date">
              {formatDate(selectedEvent.date)}, {selectedEvent.time}
            </div>

            <div className="modal-description">{selectedEvent.detailedDescription}</div>

            {selectedEvent.organizers.length > 0 && (
              <div className="modal-people">
                <h3>–û—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—é—Ç:</h3>
                <div className="people-list">
                  {selectedEvent.organizers.map((person) => (
                    <div key={person.id} className="person">
                      <img src={person.avatar} />
                      <span>{person.name}</span>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {selectedEvent.trainers.length > 0 && (
              <div className="modal-people">
                <h3>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç:</h3>
                <div className="people-list">
                  {selectedEvent.trainers.map((person) => (
                    <div key={person.id} className="person">
                      <img src={person.avatar}/>
                      <span>{person.name}</span>
                    </div>
                  ))}
                </div>
              </div>
            )}

            <div className="modal-registered">
              <h3>–•–æ—Ç—è—Ç –ø–æ–π—Ç–∏:</h3>
              <div className="registered-count">
                <span className="icon">üë§</span>
                <span>{selectedEvent.registeredCount}</span>
              </div>
            </div>

            <div className="modal-actions">
              {selectedEvent.websiteUrl && (
                <a
                  href={selectedEvent.websiteUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="modal-action website"
                >
                  –ù–∞ —Å–∞–π—Ç
                </a>
              )}

              <button className="modal-action register" onClick={() => handleRegister(selectedEvent.id)}>
                –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </button>
            </div>
          </div>
        </div>
      )}
    </section>
  )
}

export default Calendar;
